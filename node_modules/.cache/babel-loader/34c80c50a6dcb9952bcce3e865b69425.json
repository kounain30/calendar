{"ast":null,"code":"var _jsxFileName = \"/home/codingmart/Desktop/testing/ReactCalendar/src/components/time.js\";\nimport React from \"react\";\nimport { Button, Modal } from \"react-bootstrap\";\nimport FullCalendar from \"@fullcalendar/react\";\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\nimport interactionPlugin from \"@fullcalendar/interaction\";\nimport \"@fullcalendar/core/main.css\";\nimport \"@fullcalendar/daygrid/main.css\";\nimport \"@fullcalendar/timegrid/main.css\";\nimport ImageSlider from \"./imageSlider\";\nimport styles from \"./main.scss\";\nexport default class DemoApp extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.calendarComponentRef = React.createRef();\n    this.state = {\n      show: false,\n      clickedinfo: \"\",\n      showedit: false,\n      hh: \"\",\n      editedimage: [],\n      calendarWeekends: true,\n      title: \"\",\n      description: \"\",\n      indexValue: 0,\n      imageArray: [],\n      calendarEvents: JSON.parse(JSON.stringify(eventsList)),\n      editStatus: false,\n      eventtime: '',\n      createddate: ''\n    };\n\n    this.handleClose = () => {\n      this.setState({\n        show: false\n      });\n    };\n\n    this.deleteFunction = () => {\n      let n1, index;\n\n      for (let i = 0; i < this.state.calendarEvents.length; i++) {\n        if (this.state.calendarEvents[i][\"id\"] === this.state.clickedinfo.event._def.publicId) {\n          n1 = this.state.calendarEvents[i];\n          index = i;\n        }\n      }\n\n      let n2 = [...this.state.calendarEvents];\n      n2.splice(index, 1);\n      this.setState({\n        calendarEvents: n2,\n        showedit: false\n      });\n    };\n\n    this.editImagemage = e => {\n      e.preventDefault();\n      let file = e.target.files[0];\n      let reader = new FileReader();\n\n      if (e.target.files.length === 0) {\n        return;\n      }\n\n      reader.onloadend = e => {\n        this.setState({\n          editedimage: [reader.result]\n        });\n      };\n\n      reader.readAsDataURL(file);\n    };\n\n    this.getId = info => {\n      this.setState({\n        clickedinfo: info,\n        showedit: true,\n        indexValue: info.event.id\n      });\n    };\n\n    this.handleCloseedit = () => {\n      this.setState({\n        showedit: false,\n        editStatus: false\n      });\n    };\n\n    this.toggleWeekends = () => {\n      this.setState({\n        calendarWeekends: !this.state.calendarWeekends\n      });\n    };\n\n    this.gotoPast = () => {\n      let calendarApi = this.calendarComponentRef.current.getApi();\n      calendarApi.gotoDate(\"2000-01-01\");\n    };\n\n    this.handleFormUpdate = () => {\n      let data = this.state.calendarEvents;\n      let getIndex = data.findIndex(item => item.id === this.state.indexValue);\n      data[getIndex].title = this.state.title;\n      data[getIndex].description = this.state.description;\n      data[getIndex].eventtime = this.state.eventtime;\n      data = [...data, {\n        delete: true\n      }];\n      console.log(\"Edited\".data);\n      this.setState({\n        calendarEvents: [...data],\n        showedit: false,\n        editStatus: false\n      });\n    };\n\n    this.handleFormSubmit = e => {\n      let arg = this.state.hh;\n      this.setState({\n        show: false,\n        calendarEvents: this.state.calendarEvents.concat({\n          id: arg.view.uid,\n          title: this.state.title,\n          description: this.state.description,\n          images: this.state.imageArray,\n          start: arg.date,\n          clickedinfo: \"\",\n          eventtime: this.state.eventtime,\n          createddate: new Date()\n        })\n      });\n    };\n\n    this.handleDateClick = arg => {\n      if (\"add event?\" + arg.datestr + \"?\") {\n        this.setState({\n          show: true,\n          hh: arg\n        });\n        console.log(\"dc\", arg); //\n      } else {\n        alert(\"try again with correct format \");\n      }\n    };\n\n    this.onChangeHandler = event => {\n      let nam = event.target.name;\n      let val = event.target.value;\n      this.setState({\n        [nam]: val\n      });\n    };\n\n    this.onEditHandler = event => {\n      let nam = event.target.name;\n      let val = event.target.value;\n      this.setState({\n        [nam]: val\n      });\n    };\n\n    this.handleImageUpload = e => {\n      let image = [];\n      let files = Array.from(e.target.files);\n      image.push(files);\n      this.setState({\n        imageArray: image\n      });\n      console.log(this.state.imageArray);\n    };\n\n    this.editStatus = () => {\n      this.setState({\n        editStatus: !this.state.editStatus\n      });\n    };\n\n    this.timeFunction = e => {\n      this.setState({\n        eventtime: e.target.value\n      });\n    };\n\n    this.edittimeFunction = e => {\n      this.setState({\n        eventtime: e.target.value\n      });\n    };\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.showedit !== prevState.showedit) {\n      let data = this.state.calendarEvents;\n      let filterData = data.filter(item => !item.delete);\n      this.setState({\n        calendarEvents: filterData\n      });\n    }\n  }\n\n  render() {\n    console.log(\"UpdatedChanges\", this.state.createddate);\n    let data = this.state.calendarEvents;\n    return React.createElement(\"div\", {\n      className: \"demo-app\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"demo-app-top\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.toggleWeekends,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }, \"toggle weekends\"), \"\\xA0\", React.createElement(\"button\", {\n      onClick: this.gotoPast,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }, \"go to a date in the past\")), React.createElement(\"div\", {\n      className: \"demo-app-calendar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    }, React.createElement(FullCalendar, {\n      defaultView: \"dayGridMonth\",\n      header: {\n        left: \"prev,next today\",\n        center: \"title\",\n        right: \"dayGridMonth,timeGridWeek,timeGridDay,listWeek\"\n      },\n      plugins: [dayGridPlugin, timeGridPlugin, interactionPlugin],\n      ref: this.calendarComponentRef,\n      weekends: this.state.calendarWeekends,\n      events: data,\n      editable: true,\n      dateClick: e => this.handleDateClick(e),\n      eventResize: this.handleItemResize,\n      eventClick: info => {\n        this.getId(info);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212\n      },\n      __self: this\n    })), React.createElement(React.Fragment, null, React.createElement(Modal, {\n      show: this.state.show,\n      onHide: this.handleClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232\n      },\n      __self: this\n    }, React.createElement(Modal.Header, {\n      closeButton: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233\n      },\n      __self: this\n    }, React.createElement(Modal.Title, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234\n      },\n      __self: this\n    }, \"Add Event\")), React.createElement(Modal.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      style: styles.labelStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238\n      },\n      __self: this\n    }, \"Enter Title:\", React.createElement(\"input\", {\n      style: {\n        marginLeft: \"10px\"\n      },\n      type: \"text\",\n      name: \"title\",\n      placeholder: \"Title\",\n      onChange: this.onChangeHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      style: styles.labelStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249\n      },\n      __self: this\n    }, \"Enter Description:\", React.createElement(\"input\", {\n      style: {\n        marginLeft: \"10px\"\n      },\n      type: \"text\",\n      name: \"description\",\n      placeholder: \"description\",\n      onChange: this.onChangeHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260\n      },\n      __self: this\n    }, \"Event Time\"), React.createElement(\"input\", {\n      type: \"time\",\n      id: \"appt\",\n      name: \"appt\",\n      min: \"00:00\",\n      max: \"23:00\",\n      onChange: this.timeFunction,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      style: styles.labelStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264\n      },\n      __self: this\n    }, \"Select Image:\", React.createElement(\"input\", {\n      style: {\n        marginLeft: \"10px\"\n      },\n      type: \"file\",\n      onChange: this.handleImageUpload,\n      multiple: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266\n      },\n      __self: this\n    })))), React.createElement(Modal.Footer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"secondary\",\n      onClick: () => this.handleClose(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276\n      },\n      __self: this\n    }, \"Close\"), React.createElement(Button, {\n      variant: \"primary\",\n      type: \"submit\",\n      onClick: this.handleFormSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279\n      },\n      __self: this\n    }, \"Save Changes\")))), React.createElement(React.Fragment, null, React.createElement(Modal, {\n      show: this.state.showedit,\n      onHide: this.handleCloseedit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291\n      },\n      __self: this\n    }, React.createElement(Modal.Header, {\n      closeButton: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292\n      },\n      __self: this\n    }, React.createElement(Modal.Title, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293\n      },\n      __self: this\n    }, \"Edit Event\")), React.createElement(Modal.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296\n      },\n      __self: this\n    }, \"Event Time:\", this.state.clickedinfo ? this.state.clickedinfo.event._def.extendedProps.eventtime : \"\"), !this.state.editStatus ? React.createElement(ImageSlider, {\n      data: this.state.clickedinfo.event && this.state.clickedinfo.event._def.extendedProps.images,\n      extraData: this.state.clickedinfo.event,\n      editStatus: this.editStatus,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298\n      },\n      __self: this\n    }) : React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310\n      },\n      __self: this\n    }, \"Edit Title:\", React.createElement(\"input\", {\n      type: \"text\",\n      style: {\n        marginLeft: \"10px\"\n      },\n      placeholder: this.state.clickedinfo ? this.state.clickedinfo.event._def.title : \"\",\n      name: \"title\",\n      onChange: this.onEditHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 324\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 325\n      },\n      __self: this\n    }, \"Edit Description:\", React.createElement(\"input\", {\n      type: \"text\",\n      style: {\n        marginLeft: \"10px\"\n      },\n      name: \"description\",\n      placeholder: this.state.clickedinfo ? this.state.clickedinfo.event._def.extendedProps.description : \"\",\n      onChange: this.onEditHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 327\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 340\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 341\n      },\n      __self: this\n    }, \"Created Date:\", React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 343\n      },\n      __self: this\n    }, this.state.clickedinfo.start, \" \")), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 345\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 346\n      },\n      __self: this\n    }, \"Edit Event Time:\", React.createElement(\"input\", {\n      type: \"time\",\n      name: \"appt\",\n      min: \"00:00\",\n      max: \"23:00\",\n      onChange: this.edittimeFunction,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 348\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 351\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 352\n      },\n      __self: this\n    }, \"Uploaded Images:\"), React.createElement(\"div\", {\n      style: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        justifyContent: \"flex-start\",\n        flexWrap: \"nowrap\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 353\n      },\n      __self: this\n    }, this.state.clickedinfo.event && this.state.clickedinfo.event._def.extendedProps.images.length > 0 && this.state.clickedinfo.event._def.extendedProps.images[0].map((item, index) => React.createElement(\"img\", {\n      key: index,\n      style: {\n        height: \"100px\",\n        width: \"100px\",\n        padding: \"20px\"\n      },\n      src: item && URL.createObjectURL(item),\n      alt: \"insert\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 366\n      },\n      __self: this\n    })))))), this.state.editStatus && React.createElement(Modal.Footer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 384\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"secondary\",\n      onClick: this.handleCloseedit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 385\n      },\n      __self: this\n    }, \"Close\"), React.createElement(Button, {\n      variant: \"primary\",\n      onClick: () => this.handleFormUpdate(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 388\n      },\n      __self: this\n    }, \"Save Changes\"), React.createElement(Button, {\n      variant: \"primary\",\n      onClick: this.deleteFunction,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 394\n      },\n      __self: this\n    }, \"Delete\")))));\n  }\n\n}","map":{"version":3,"sources":["/home/codingmart/Desktop/testing/ReactCalendar/src/components/time.js"],"names":["React","Button","Modal","FullCalendar","dayGridPlugin","timeGridPlugin","interactionPlugin","ImageSlider","styles","DemoApp","Component","calendarComponentRef","createRef","state","show","clickedinfo","showedit","hh","editedimage","calendarWeekends","title","description","indexValue","imageArray","calendarEvents","JSON","parse","stringify","eventsList","editStatus","eventtime","createddate","handleClose","setState","deleteFunction","n1","index","i","length","event","_def","publicId","n2","splice","editImagemage","e","preventDefault","file","target","files","reader","FileReader","onloadend","result","readAsDataURL","getId","info","id","handleCloseedit","toggleWeekends","gotoPast","calendarApi","current","getApi","gotoDate","handleFormUpdate","data","getIndex","findIndex","item","delete","console","log","handleFormSubmit","arg","concat","view","uid","images","start","date","Date","handleDateClick","datestr","alert","onChangeHandler","nam","name","val","value","onEditHandler","handleImageUpload","image","Array","from","push","timeFunction","edittimeFunction","componentDidUpdate","prevProps","prevState","filterData","filter","render","left","center","right","handleItemResize","labelStyle","marginLeft","extendedProps","display","flexDirection","justifyContent","flexWrap","map","height","width","padding","URL","createObjectURL"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Button, Modal } from \"react-bootstrap\";\nimport FullCalendar from \"@fullcalendar/react\";\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\nimport interactionPlugin from \"@fullcalendar/interaction\";\nimport \"@fullcalendar/core/main.css\";\nimport \"@fullcalendar/daygrid/main.css\";\nimport \"@fullcalendar/timegrid/main.css\";\nimport ImageSlider from \"./imageSlider\";\nimport styles from \"./main.scss\";\n\n\n\nexport default class DemoApp extends React.Component {\n  calendarComponentRef = React.createRef();\n\n  state = {\n    show: false,\n    clickedinfo: \"\",\n    showedit: false,\n    hh: \"\",\n    editedimage: [],\n    calendarWeekends: true,\n    title: \"\",\n    description: \"\",\n    indexValue: 0,\n    imageArray: [],\n    calendarEvents: JSON.parse(JSON.stringify(eventsList)),\n    editStatus: false,\n\teventtime:'',\n\tcreateddate:''\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.showedit !== prevState.showedit) {\n      let data = this.state.calendarEvents;\n      let filterData = data.filter(item => !item.delete);\n      this.setState({          \n        calendarEvents: filterData\n      });\n    }\n  }\n\n  handleClose = () => {\n    this.setState({\n      show: false\n    });\n  };\n  deleteFunction = () => {\n    let n1, index;\n    for (let i = 0; i < this.state.calendarEvents.length; i++) {\n      if (\n        this.state.calendarEvents[i][\"id\"] ===\n        this.state.clickedinfo.event._def.publicId\n      ) {\n        n1 = this.state.calendarEvents[i];\n        index = i;\n      }\n    }\n\n    let n2 = [...this.state.calendarEvents];\n    n2.splice(index, 1);\n    this.setState({\n      calendarEvents: n2,\n      showedit: false\n    });\n  };\n\n  editImagemage = e => {\n    e.preventDefault();\n\n    let file = e.target.files[0];\n    let reader = new FileReader();\n\n    if (e.target.files.length === 0) {\n      return;\n    }\n\n    reader.onloadend = e => {\n      this.setState({\n        editedimage: [reader.result]\n      });\n    };\n\n    reader.readAsDataURL(file);\n  };\n\n  getId = info => {\n    this.setState({\n      clickedinfo: info,\n      showedit: true,\n      indexValue: info.event.id\n    });\n  };\n  handleCloseedit = () => {\n    this.setState({\n      showedit: false,\n      editStatus: false\n    });\n  };\n  toggleWeekends = () => {\n    this.setState({\n      calendarWeekends: !this.state.calendarWeekends\n    });\n  };\n\n  gotoPast = () => {\n    let calendarApi = this.calendarComponentRef.current.getApi();\n    calendarApi.gotoDate(\"2000-01-01\");\n  };\n\n  handleFormUpdate = () => {\n    let data = this.state.calendarEvents;\n    let getIndex = data.findIndex(item => item.id === this.state.indexValue);\n    data[getIndex].title = this.state.title;\n    data[getIndex].description = this.state.description;\n\tdata[getIndex].eventtime = this.state.eventtime;\n    data = [...data, { delete: true }];\n\n    console.log(\"Edited\".data);\n\n    this.setState({\n      calendarEvents: [...data],\n      showedit: false,\n      editStatus: false\n    });\n  };\n\n  handleFormSubmit = e => {\n    let arg = this.state.hh;\n    this.setState({\n      show: false,\n      calendarEvents: this.state.calendarEvents.concat({\n        id: arg.view.uid,\n        title: this.state.title,\n        description: this.state.description,\n        images: this.state.imageArray,\n        start: arg.date,\n        clickedinfo: \"\",\n\t\teventtime:this.state.eventtime,\n\t\tcreateddate:new Date()\n      })\n    });\n  };\n\n  handleDateClick = arg => {\n    if (\"add event?\" + arg.datestr + \"?\") {\n      this.setState({\n        show: true,\n        hh: arg\n      });\n      console.log(\"dc\", arg);\n      //\n    } else {\n      alert(\"try again with correct format \");\n    }\n  };\n\n  onChangeHandler = event => {\n    let nam = event.target.name;\n    let val = event.target.value;\n\n    this.setState({\n      [nam]: val\n    });\n  };\n  onEditHandler = event => {\n    let nam = event.target.name;\n    let val = event.target.value;\n\n    this.setState({\n      [nam]: val\n    });\n  };\n  handleImageUpload = e => {\n    let image = [];\n    let files = Array.from(e.target.files);\n    image.push(files);\n    this.setState({\n      imageArray: image\n    });\n    console.log(this.state.imageArray);\n  };\n\n  editStatus = () => {\n    this.setState({\n      editStatus: !this.state.editStatus\n    });\n  };\n  timeFunction = (e) =>{\n\t  this.setState({\n\t\t  eventtime:e.target.value\n\t  })\n  }\n  edittimeFunction = (e) =>{\n\t  this.setState({\n\t\t  eventtime:e.target.value\n\t  })\n  }\n  render() {\n    console.log(\"UpdatedChanges\", this.state.createddate);\n    let data = this.state.calendarEvents;\n    return (\n      <div className=\"demo-app\">\n        <div className=\"demo-app-top\">\n          <button onClick={this.toggleWeekends}>toggle weekends</button>&nbsp;\n          <button onClick={this.gotoPast}>go to a date in the past</button>\n        </div>\n\n        <div className=\"demo-app-calendar\">\n          <FullCalendar\n            defaultView=\"dayGridMonth\"\n            header={{\n              left: \"prev,next today\",\n              center: \"title\",\n              right: \"dayGridMonth,timeGridWeek,timeGridDay,listWeek\"\n            }}\n            plugins={[dayGridPlugin, timeGridPlugin, interactionPlugin]}\n            ref={this.calendarComponentRef}\n            weekends={this.state.calendarWeekends}\n            events={data}\n            editable\n            dateClick={e => this.handleDateClick(e)}\n            eventResize={this.handleItemResize}\n            eventClick={info => {\n              this.getId(info);\n            }}\n          />\n        </div>\n        <>\n          <Modal show={this.state.show} onHide={this.handleClose}>\n            <Modal.Header closeButton>\n              <Modal.Title>Add Event</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n              <form>\n                <label style={styles.labelStyle}>\n                  Enter Title:\n                  <input\n                    style={{ marginLeft: \"10px\" }}\n                    type=\"text\"\n                    name=\"title\"\n                    placeholder=\"Title\"\n                    onChange={this.onChangeHandler}\n                  />\n                </label>\n                <br />\n                <label style={styles.labelStyle}>\n                  Enter Description:\n                  <input\n                    style={{ marginLeft: \"10px\" }}\n                    type=\"text\"\n                    name=\"description\"\n                    placeholder=\"description\"\n                    onChange={this.onChangeHandler}\n                  />\n                </label>\n                <br />\n\t\t\t\t<label>Event Time</label>\n\t\t\t\t<input type=\"time\" id=\"appt\" name=\"appt\"\n       min=\"00:00\" max=\"23:00\" onChange={this.timeFunction}/>\n\t   <br/>\n                <label style={styles.labelStyle}>\n                  Select Image:\n                  <input\n                    style={{ marginLeft: \"10px\" }}\n                    type=\"file\"\n                    onChange={this.handleImageUpload}\n                    multiple\n                  />\n                </label>\n              </form>\n            </Modal.Body>\n            <Modal.Footer>\n              <Button variant=\"secondary\" onClick={() => this.handleClose()}>\n                Close\n              </Button>\n              <Button\n                variant=\"primary\"\n                type=\"submit\"\n                onClick={this.handleFormSubmit}\n              >\n                Save Changes\n              </Button>\n            </Modal.Footer>\n          </Modal>\n        </>\n\n        <>\n          <Modal show={this.state.showedit} onHide={this.handleCloseedit}>\n            <Modal.Header closeButton>\n              <Modal.Title>Edit Event</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n\t\t\t<h3>Event Time:{this.state.clickedinfo? this.state.clickedinfo.event._def.extendedProps.eventtime: \"\"}</h3>\n              {!this.state.editStatus ? (\n                <ImageSlider\n                  data={\n                    this.state.clickedinfo.event &&\n                    this.state.clickedinfo.event._def.extendedProps.images\n                  }\n                  extraData={this.state.clickedinfo.event}\n                  editStatus={this.editStatus}\n                />\n\t\t\t\t\n              ) : (\n                <form>\n                  <div>\n                    <label>\n                      Edit Title:\n                      <input\n                        type=\"text\"\n                        style={{ marginLeft: \"10px\" }}\n                        placeholder={\n                          this.state.clickedinfo\n                            ? this.state.clickedinfo.event._def.title\n                            : \"\"\n                        }\n                        name=\"title\"\n                        onChange={this.onEditHandler}\n                      />\n                    </label>\n                    <br />\n                    <label>\n                      Edit Description:\n                      <input\n                        type=\"text\"\n                        style={{ marginLeft: \"10px\" }}\n                        name=\"description\"\n                        placeholder={\n                          this.state.clickedinfo\n                            ? this.state.clickedinfo.event._def.extendedProps\n                                .description\n                            : \"\"\n                        }\n                        onChange={this.onEditHandler}\n                      />\n                    </label>\n                    <br />\n                    <label>\n                      Created Date:\n                      <p>{this.state.clickedinfo.start} </p>\n                    </label>\n                    <br />\n\t\t\t\t\t<label>\n                      Edit Event Time:\n\t\t\t\t\t  <input type=\"time\" name=\"appt\"\n       min=\"00:00\" max=\"23:00\" onChange={this.edittimeFunction}/>\n                    </label>\n                    <br />\n                    <label>Uploaded Images:</label>\n                    <div\n                      style={{\n                        display: \"flex\",\n                        flexDirection: \"row\",\n                        justifyContent: \"flex-start\",\n                        flexWrap: \"nowrap\"\n                      }}\n                    >\n                      {this.state.clickedinfo.event &&\n                        this.state.clickedinfo.event._def.extendedProps.images\n                          .length > 0 &&\n                        this.state.clickedinfo.event._def.extendedProps.images[0].map(\n                          (item, index) => (\n                            <img\n                              key={index}\n                              style={{\n                                height: \"100px\",\n                                width: \"100px\",\n                                padding: \"20px\"\n                              }}\n                              src={item && URL.createObjectURL(item)}\n                              alt=\"insert\"\n                            />\n                          )\n                        )}\n                    </div>\n                  </div>\n                </form>\n              )}\n            </Modal.Body>\n            {this.state.editStatus && (\n              <Modal.Footer>\n                <Button variant=\"secondary\" onClick={this.handleCloseedit}>\n                  Close\n                </Button>\n                <Button\n                  variant=\"primary\"\n                  onClick={() => this.handleFormUpdate()}\n                >\n                  Save Changes\n                </Button>\n                <Button variant=\"primary\" onClick={this.deleteFunction}>\n                  Delete\n                </Button>\n              </Modal.Footer>\n            )}\n          </Modal>\n        </>\n      </div>\n    );\n  }\n}"]},"metadata":{},"sourceType":"module"}